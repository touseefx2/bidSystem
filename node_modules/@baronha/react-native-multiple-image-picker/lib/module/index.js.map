{"version":3,"sources":["index.js"],"names":["NativeModules","Dimensions","width","height","get","MultipleImagePicker","exportObject","defaultOptions","usedPrefetch","allowedAlbumCloudShared","muteAudio","autoPlay","haveThumbnail","thumbnailWidth","Math","round","thumbnailHeight","allowedLivePhotos","preventAutomaticLimitedAccessAlert","emptyMessage","selectedColor","maximumMessageTitle","maximumMessage","maximumVideoMessage","messageTitleButton","cancelTitle","tapHereToChange","usedCameraButton","allowedVideo","allowedPhotograph","allowedVideoRecording","maxVideoDuration","numberOfColumn","maxSelectedAssets","singleSelectedMode","doneTitle","isPreview","mediaType","isExportThumbnail","maxVideo","selectedAssets","openPicker","optionsPicker","options","Promise","resolve","reject","response","console","log","length","e"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,cAA1C;AACA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAoBF,UAAU,CAACG,GAAX,CAAe,QAAf,CAA1B;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BL,aAAhC;AAEA,IAAIM,YAAY,GAAG,EAAnB;AAEA,IAAIC,cAAc,GAAG;AACnB;AACAC,EAAAA,YAAY,EAAE,KAFK;AAGnBC,EAAAA,uBAAuB,EAAE,KAHN;AAInBC,EAAAA,SAAS,EAAE,IAJQ;AAKnBC,EAAAA,QAAQ,EAAE,IALS;AAMnB;AACAC,EAAAA,aAAa,EAAE,IAPI;AASnBC,EAAAA,cAAc,EAAEC,IAAI,CAACC,KAAL,CAAWb,KAAK,GAAG,CAAnB,CATG;AAUnBc,EAAAA,eAAe,EAAEF,IAAI,CAACC,KAAL,CAAWZ,MAAM,GAAG,CAApB,CAVE;AAWnBc,EAAAA,iBAAiB,EAAE,IAXA;AAYnBC,EAAAA,kCAAkC,EAAE,IAZjB;AAYuB;AAC1CC,EAAAA,YAAY,EAAE,WAbK;AAcnBC,EAAAA,aAAa,EAAE,SAdI;AAenBC,EAAAA,mBAAmB,EAAE,cAfF;AAgBnBC,EAAAA,cAAc,EAAE,uDAhBG;AAiBnBC,EAAAA,mBAAmB,EAAE,uDAjBF;AAkBnBC,EAAAA,kBAAkB,EAAE,IAlBD;AAmBnBC,EAAAA,WAAW,EAAE,QAnBM;AAoBnBC,EAAAA,eAAe,EAAE,oBApBE;AAsBnB;AAEA;AAEA;AAEA;AACAC,EAAAA,gBAAgB,EAAE,IA7BC;AA8BnBC,EAAAA,YAAY,EAAE,IA9BK;AA+BnBC,EAAAA,iBAAiB,EAAE,IA/BA;AA+BM;AACzBC,EAAAA,qBAAqB,EAAE,KAhCJ;AAgCW;AAC9BC,EAAAA,gBAAgB,EAAE,EAjCC;AAiCG;AACtBC,EAAAA,cAAc,EAAE,CAlCG;AAmCnBC,EAAAA,iBAAiB,EAAE,EAnCA;AAoCnBC,EAAAA,kBAAkB,EAAE,KApCD;AAqCnBC,EAAAA,SAAS,EAAE,MArCQ;AAsCnBC,EAAAA,SAAS,EAAE,IAtCQ;AAuCnBC,EAAAA,SAAS,EAAE,KAvCQ;AAwCnBC,EAAAA,iBAAiB,EAAE,KAxCA;AAyCnBC,EAAAA,QAAQ,EAAE,EAzCS;AA0CnBC,EAAAA,cAAc,EAAE,EA1CG,CA2CnB;AAEA;AACA;AAEA;;AAhDmB,CAArB;AAmDAlC,YAAY,GAAG;AACbmC,EAAAA,UAAU,EAAGC,aAAD,IAAmB;AAC7B,UAAMC,OAAO,GAAG,EACd,GAAGpC,cADW;AAEd,SAAGmC;AAFW,KAAhB;AAIA,WAAO,IAAIE,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAM1C,mBAAmB,CAACoC,UAApB,CAA+BE,OAA/B,CAAvB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,QAAnB;;AACA,YAAIA,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEG,MAAd,EAAsB;AACpBL,UAAAA,OAAO,CAACE,QAAD,CAAP;AACA;AACD;;AACDF,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD,OARD,CAQE,OAAOM,CAAP,EAAU;AACVL,QAAAA,MAAM,CAACK,CAAD,CAAN;AACD;AACF,KAZM,CAAP;AAaD;AAnBY,CAAf;AAsBA,eAAe7C,YAAf","sourcesContent":["import { NativeModules, Dimensions } from 'react-native';\nconst { width, height } = Dimensions.get('window');\nconst { MultipleImagePicker } = NativeModules;\n\nlet exportObject = {};\n\nlet defaultOptions = {\n  //**iOS**//\n  usedPrefetch: false,\n  allowedAlbumCloudShared: false,\n  muteAudio: true,\n  autoPlay: true,\n  //resize thumbnail\n  haveThumbnail: true,\n\n  thumbnailWidth: Math.round(width / 2),\n  thumbnailHeight: Math.round(height / 2),\n  allowedLivePhotos: true,\n  preventAutomaticLimitedAccessAlert: true, // newest iOS 14\n  emptyMessage: 'No albums',\n  selectedColor: '#FB9300',\n  maximumMessageTitle: 'Notification',\n  maximumMessage: 'You have selected the maximum number of media allowed',\n  maximumVideoMessage: 'You have selected the maximum number of video allowed',\n  messageTitleButton: 'OK',\n  cancelTitle: 'Cancel',\n  tapHereToChange: 'Tap here to change',\n\n  //****//\n\n  //**Android**//\n\n  //****//\n\n  //**Both**//\n  usedCameraButton: true,\n  allowedVideo: true,\n  allowedPhotograph: true, // for camera : allow this option when you want to take a photos\n  allowedVideoRecording: false, //for camera : allow this option when you want to recording video.\n  maxVideoDuration: 60, //for camera : max video recording duration\n  numberOfColumn: 3,\n  maxSelectedAssets: 20,\n  singleSelectedMode: false,\n  doneTitle: 'Done',\n  isPreview: true,\n  mediaType: 'all',\n  isExportThumbnail: false,\n  maxVideo: 20,\n  selectedAssets: [],\n  //****//\n\n  // fetchOption: Object,\n  // fetchCollectionOption: Object,\n\n  // emptyImage: Image,\n};\n\nexportObject = {\n  openPicker: (optionsPicker) => {\n    const options = {\n      ...defaultOptions,\n      ...optionsPicker,\n    };\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await MultipleImagePicker.openPicker(options);\n        console.log('res', response);\n        if (response?.length) {\n          resolve(response);\n          return;\n        }\n        resolve([]);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  },\n};\n\nexport default exportObject;\n"]}